version: '3.8'

services:
  # MongoDB veritabanı
  mongodb:
    image: mongo:7.0
    container_name: algomath-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: algomath_kids
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - algomath-network

  # Redis cache ve session store
  redis:
    image: redis:7.2-alpine
    container_name: algomath-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - algomath-network

  # RabbitMQ message broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: algomath-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - algomath-network

  # NestJS uygulaması (opsiyonel - development için)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: algomath-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/algomath_kids?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - algomath-network
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  algomath-network:
    driver: bridge
